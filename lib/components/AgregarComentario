import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

class AgregarComentario extends StatelessWidget {
  final String recetaId;

  const AgregarComentario({Key? key, required this.recetaId}) : super(key: key);

  Future<void> agregarComentario(String texto) async {
    final user = FirebaseAuth.instance.currentUser;
    if (user == null) throw Exception("Usuario no autenticado");
    
    // Obtener el nombre del usuario desde Firestore
    final userDoc = await FirebaseFirestore.instance.collection('usuarios').doc(user.uid).get();
    
    String usuarioNombre = 'Usuario desconocido';
    if (userDoc.exists) {
      usuarioNombre = userDoc.data()?['nombre'] ?? 'Usuario desconocido';
    } else {
      print('El usuario no existe en la base de datos');
    }

    // Guardar el comentario en la colección "comentarios"
    await FirebaseFirestore.instance.collection('comentarios').add({
      'recetaId': recetaId,  // Corregido: usar recetaId en lugar de receta.id
      'usuarioId': user.uid,
      'usuarioNombre': usuarioNombre,
      'texto': texto,
      'fecha': FieldValue.serverTimestamp(),
      'likes': 0,
    });
  }

  Future<String> obtenerUsuarioActual() async {
  final user = FirebaseAuth.instance.currentUser;
  if (user == null) {
    return "Usuario no autenticado";
  }
  
  // Obtener el nombre desde Firestore
  final userDoc = await FirebaseFirestore.instance.collection('usuarios').doc(user.uid).get();
  if (userDoc.exists) {
    String usuarioNombre = userDoc.data()?['nombre'] ?? 'Usuario desconocido';  // Usamos 'nombre' como clave
    return usuarioNombre;
  } else {
    return "Usuario no encontrado en la base de datos";
  }
}

  void _borrarComentario(String comentarioId) async {
    await FirebaseFirestore.instance.collection('comentarios').doc(comentarioId).delete();
  }

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<QuerySnapshot>(
      stream: FirebaseFirestore.instance
          .collection('comentarios')
          .where('recetaId', isEqualTo: recetaId)  // Corregido: usar recetaId
          .orderBy('fecha', descending: true)
          .snapshots(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }
        if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
          return const Text("No hay comentarios aún");
        }
        return ListView.builder(
          shrinkWrap: true,
          physics: const NeverScrollableScrollPhysics(),
          itemCount: snapshot.data!.docs.length,
          itemBuilder: (context, index) {
            final comentario = snapshot.data!.docs[index].data() as Map<String, dynamic>;
            return Card(
              child: ListTile(
                title: Text("Usuario: ${comentario['usuarioNombre']}"),  
                subtitle: Text(comentario['texto']),
                trailing: Text(
                  DateFormat('dd/MM/yyyy').format(
                    (comentario['fecha'] as Timestamp).toDate(),
                  ),
                ),
                onLongPress: () {
                  if (comentario['usuarioId'] == FirebaseAuth.instance.currentUser?.uid) {
                    _borrarComentario(snapshot.data!.docs[index].id);
                  }
                },
              ),
            );
          },
        );
      },
    );
  }
}
